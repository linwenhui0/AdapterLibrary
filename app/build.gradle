apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "0.1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compileOnly 'com.android.support:support-v4:27.1.1'
    compileOnly 'com.android.support:support-annotations:27.1.1'
    compileOnly 'com.android.support:appcompat-v7:27.1.1'
    compileOnly 'com.android.support:recyclerview-v7:27.1.1'
    compileOnly 'com.hlibrary.util:utillibrary:0.1.0.0-SNAPSHOT'
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}
uploadArchives{
    configuration = configurations.archives
    repositories{
        mavenDeployer{
            pom.groupId = GROUP
            pom.artifactId = POM_ARTIFACT_ID
            pom.version = VERSION_NAME
            repository(url: RELEASE_REPOSITORY_URL) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }
            snapshotRepository(url: SNAPSHOT_REPOSITORY_URL) {
                authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
            }


        }
    }
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
//        archives androidJavadocsJar
}
